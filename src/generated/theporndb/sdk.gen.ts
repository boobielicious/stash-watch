// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client'
import type {
  SearchScenesData,
  SearchScenesResponses,
  CreateSceneData,
  CreateSceneResponses,
  CreateSceneErrors,
  SearchJavData,
  SearchJavResponses,
  CreateJavData,
  CreateJavResponses,
  CreateJavErrors,
  SearchMoviesData,
  SearchMoviesResponses,
  CreateMovieData,
  CreateMovieResponses,
  CreateMovieErrors,
  GetPerformerScenesData,
  GetPerformerScenesResponses,
  GetPerformerJavData,
  GetPerformerJavResponses,
  GetPerformerMoviesData,
  GetPerformerMoviesResponses,
  GetSceneData,
  GetSceneResponses,
  GetSceneErrors,
  GetJavData,
  GetJavResponses,
  GetJavErrors,
  GetMovieData,
  GetMovieResponses,
  GetMovieErrors,
  FindSceneHashData,
  FindSceneHashResponses,
  FindSceneHashErrors,
  FindJavHashData,
  FindJavHashResponses,
  FindJavHashErrors,
  FindMovieHashData,
  FindMovieHashResponses,
  FindMovieHashErrors,
  GetScenesSimilarData,
  GetScenesSimilarResponses,
  GetScenesSimilarErrors,
  GetJavSimilarData,
  GetJavSimilarResponses,
  GetJavSimilarErrors,
  GetMoviesSimilarData,
  GetMoviesSimilarResponses,
  GetMoviesSimilarErrors,
  GetScenesSimilarByIdsData,
  GetScenesSimilarByIdsResponses,
  GetScenesSimilarByIdsErrors,
  GetJavSimilarByIdsData,
  GetJavSimilarByIdsResponses,
  GetJavSimilarByIdsErrors,
  GetMoviesSimilarByIdsData,
  GetMoviesSimilarByIdsResponses,
  GetMoviesSimilarByIdsErrors,
  GetSiteScenesData,
  GetSiteScenesResponses,
  GetSiteJavData,
  GetSiteJavResponses,
  GetSiteMoviesData,
  GetSiteMoviesResponses,
  CreateSceneHashData,
  CreateSceneHashResponses,
  CreateSceneHashErrors,
  CreateJavHashData,
  CreateJavHashResponses,
  CreateJavHashErrors,
  CreateMovieHashData,
  CreateMovieHashResponses,
  CreateMovieHashErrors,
  BulkUpdateScenesData,
  BulkUpdateScenesResponses,
  E17E1Cbab46Bd5F9256203B1283A4E6fData,
  E17E1Cbab46Bd5F9256203B1283A4E6fResponses,
  ListDirectorsData,
  ListDirectorsResponses,
  ListFavoritesData,
  ListFavoritesResponses,
  ToggleFavoritesData,
  ToggleFavoritesResponses,
  DeleteHashesData,
  DeleteHashesResponses,
  F24E347F94Aa2C1088F662C13A704Data,
  F24E347F94Aa2C1088F662C13A704Responses,
  ListPerformerSitesData,
  ListPerformerSitesResponses,
  ListPerformersData,
  ListPerformersResponses,
  GetPerformerData,
  GetPerformerResponses,
  GetPerformerErrors,
  GetPerformerSimilarData,
  GetPerformerSimilarResponses,
  GetPerformerSimilarErrors,
  GetPerformerSimilarByIdsData,
  GetPerformerSimilarByIdsResponses,
  GetPerformerSimilarByIdsErrors,
  GetRatingData,
  GetRatingResponses,
  AddRatingData,
  AddRatingResponses,
  ListSitesData,
  ListSitesResponses,
  Ff8A9Eed4050230F99E50E9Fd7830A00Data,
  Ff8A9Eed4050230F99E50E9Fd7830A00Responses,
  Ff8A9Eed4050230F99E50E9Fd7830A00Errors,
  ListTagsData,
  ListTagsResponses,
  ToggleCollectionData,
  ToggleCollectionResponses,
  MeData,
  MeResponses
} from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<
  TData,
  ThrowOnError
> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * List/Search Scenes
 */
export const searchScenes = <ThrowOnError extends boolean = false>(
  options?: Options<SearchScenesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<SearchScenesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes',
    ...options
  })
}

/**
 * Create Scenes
 * Create a Scene
 */
export const createScene = <ThrowOnError extends boolean = false>(options?: Options<CreateSceneData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).post<CreateSceneResponses, CreateSceneErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * List/Search Jav
 */
export const searchJav = <ThrowOnError extends boolean = false>(options?: Options<SearchJavData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<SearchJavResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav',
    ...options
  })
}

/**
 * Create Jav
 */
export const createJav = <ThrowOnError extends boolean = false>(options?: Options<CreateJavData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).post<CreateJavResponses, CreateJavErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * List/Search Movies
 */
export const searchMovies = <ThrowOnError extends boolean = false>(
  options?: Options<SearchMoviesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<SearchMoviesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies',
    ...options
  })
}

/**
 * Create Movies
 */
export const createMovie = <ThrowOnError extends boolean = false>(options?: Options<CreateMovieData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).post<CreateMovieResponses, CreateMovieErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * Get Performer Scenes
 */
export const getPerformerScenes = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerScenesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetPerformerScenesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/{identifier}/scenes',
    ...options
  })
}

/**
 * Get Performer Jav
 */
export const getPerformerJav = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerJavData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetPerformerJavResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/{identifier}/jav',
    ...options
  })
}

/**
 * Get Performer Movies
 */
export const getPerformerMovies = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerMoviesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetPerformerMoviesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/{identifier}/movies',
    ...options
  })
}

/**
 * Get Scene
 */
export const getScene = <ThrowOnError extends boolean = false>(options: Options<GetSceneData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<GetSceneResponses, GetSceneErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes/{identifier}',
    ...options
  })
}

/**
 * Get Jav
 */
export const getJav = <ThrowOnError extends boolean = false>(options: Options<GetJavData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<GetJavResponses, GetJavErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav/{identifier}',
    ...options
  })
}

/**
 * Get Movie
 */
export const getMovie = <ThrowOnError extends boolean = false>(options: Options<GetMovieData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<GetMovieResponses, GetMovieErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies/{identifier}',
    ...options
  })
}

/**
 * Find Scene By Hash
 * Find scene by hash
 */
export const findSceneHash = <ThrowOnError extends boolean = false>(
  options: Options<FindSceneHashData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<FindSceneHashResponses, FindSceneHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes/hash/{hash}',
    ...options
  })
}

/**
 * Find Jav By Hash
 */
export const findJavHash = <ThrowOnError extends boolean = false>(options: Options<FindJavHashData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<FindJavHashResponses, FindJavHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav/hash/{hash}',
    ...options
  })
}

/**
 * Find Movie By Hash
 */
export const findMovieHash = <ThrowOnError extends boolean = false>(
  options: Options<FindMovieHashData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<FindMovieHashResponses, FindMovieHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies/hash/{hash}',
    ...options
  })
}

/**
 * Get similar Scenes
 */
export const getScenesSimilar = <ThrowOnError extends boolean = false>(
  options: Options<GetScenesSimilarData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetScenesSimilarResponses, GetScenesSimilarErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes/{identifier}/similar',
    ...options
  })
}

/**
 * Get similar Jav
 */
export const getJavSimilar = <ThrowOnError extends boolean = false>(
  options: Options<GetJavSimilarData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetJavSimilarResponses, GetJavSimilarErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav/{identifier}/similar',
    ...options
  })
}

/**
 * Get similar Movies
 */
export const getMoviesSimilar = <ThrowOnError extends boolean = false>(
  options: Options<GetMoviesSimilarData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetMoviesSimilarResponses, GetMoviesSimilarErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies/{identifier}/similar',
    ...options
  })
}

/**
 * Get similar Scenes by multiple ids
 */
export const getScenesSimilarByIds = <ThrowOnError extends boolean = false>(
  options: Options<GetScenesSimilarByIdsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetScenesSimilarByIdsResponses,
    GetScenesSimilarByIdsErrors,
    ThrowOnError
  >({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes/similar',
    ...options
  })
}

/**
 * Get similar Jav by multiple ids
 */
export const getJavSimilarByIds = <ThrowOnError extends boolean = false>(
  options: Options<GetJavSimilarByIdsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetJavSimilarByIdsResponses, GetJavSimilarByIdsErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav/similar',
    ...options
  })
}

/**
 * Get similar Movies by multiple ids
 */
export const getMoviesSimilarByIds = <ThrowOnError extends boolean = false>(
  options: Options<GetMoviesSimilarByIdsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetMoviesSimilarByIdsResponses,
    GetMoviesSimilarByIdsErrors,
    ThrowOnError
  >({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies/similar',
    ...options
  })
}

/**
 * Get Site Scenes
 */
export const getSiteScenes = <ThrowOnError extends boolean = false>(
  options: Options<GetSiteScenesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetSiteScenesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/sites/{identifier}/scenes',
    ...options
  })
}

/**
 * Get Site Jav
 */
export const getSiteJav = <ThrowOnError extends boolean = false>(options: Options<GetSiteJavData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<GetSiteJavResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/sites/{identifier}/jav',
    ...options
  })
}

/**
 * Get Site Movies
 */
export const getSiteMovies = <ThrowOnError extends boolean = false>(
  options: Options<GetSiteMoviesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetSiteMoviesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/sites/{identifier}/movies',
    ...options
  })
}

/**
 * Create Scenes Hash
 * Add/Vote for Hash
 */
export const createSceneHash = <ThrowOnError extends boolean = false>(
  options: Options<CreateSceneHashData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<CreateSceneHashResponses, CreateSceneHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/scenes/{identifier}/hash',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers
    }
  })
}

/**
 * Create Jav Hash
 */
export const createJavHash = <ThrowOnError extends boolean = false>(
  options: Options<CreateJavHashData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<CreateJavHashResponses, CreateJavHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/jav/{identifier}/hash',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers
    }
  })
}

/**
 * Create Movies Hash
 */
export const createMovieHash = <ThrowOnError extends boolean = false>(
  options: Options<CreateMovieHashData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<CreateMovieHashResponses, CreateMovieHashErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/movies/{identifier}/hash',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers
    }
  })
}

/**
 * Bulk update scene dates and hashes
 * Bulk Upsert Scenes
 */
export const bulkUpdateScenes = <ThrowOnError extends boolean = false>(
  options?: Options<BulkUpdateScenesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<BulkUpdateScenesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/bulk/scene',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  })
}

/**
 * Returns changes for an entity
 */
export const e17E1Cbab46Bd5F9256203B1283A4E6F = <ThrowOnError extends boolean = false>(
  options: Options<E17E1Cbab46Bd5F9256203B1283A4E6fData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<E17E1Cbab46Bd5F9256203B1283A4E6fResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/changes/{type}',
    ...options
  })
}

/**
 * List/Search Directors
 */
export const listDirectors = <ThrowOnError extends boolean = false>(
  options?: Options<ListDirectorsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<ListDirectorsResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/directors',
    ...options
  })
}

/**
 * List/Show Favorites
 */
export const listFavorites = <ThrowOnError extends boolean = false>(
  options?: Options<ListFavoritesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<ListFavoritesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/favourites',
    ...options
  })
}

/**
 * Show's whether a resource is a favourite
 */
export const toggleFavorites = <ThrowOnError extends boolean = false>(
  options: Options<ToggleFavoritesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<ToggleFavoritesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/favourites',
    ...options
  })
}

/**
 * Delete hashes by id
 */
export const deleteHashes = <ThrowOnError extends boolean = false>(
  options: Options<DeleteHashesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<DeleteHashesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/hashes',
    ...options
  })
}

/**
 * Get User Leaderboard
 */
export const f24E347F94Aa2C1088F662C13A704 = <ThrowOnError extends boolean = false>(
  options?: Options<F24E347F94Aa2C1088F662C13A704Data, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<F24E347F94Aa2C1088F662C13A704Responses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/user/leaderboard',
    ...options
  })
}

/**
 * List/Search Performer Sites
 * List Performer Sites
 */
export const listPerformerSites = <ThrowOnError extends boolean = false>(
  options?: Options<ListPerformerSitesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<ListPerformerSitesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performer-sites',
    ...options
  })
}

/**
 * List/Search Performers
 * List Performers
 */
export const listPerformers = <ThrowOnError extends boolean = false>(
  options?: Options<ListPerformersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<ListPerformersResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers',
    ...options
  })
}

/**
 * Get Performer
 */
export const getPerformer = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetPerformerResponses, GetPerformerErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/{identifier}',
    ...options
  })
}

/**
 * Get Similar Performers
 */
export const getPerformerSimilar = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerSimilarData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetPerformerSimilarResponses, GetPerformerSimilarErrors, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/{identifier}/similar',
    ...options
  })
}

/**
 * Get Similar Performers by IDs
 */
export const getPerformerSimilarByIds = <ThrowOnError extends boolean = false>(
  options: Options<GetPerformerSimilarByIdsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetPerformerSimilarByIdsResponses,
    GetPerformerSimilarByIdsErrors,
    ThrowOnError
  >({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/performers/similar',
    ...options
  })
}

/**
 * Get Rating
 */
export const getRating = <ThrowOnError extends boolean = false>(options: Options<GetRatingData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).get<GetRatingResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/ratings',
    ...options
  })
}

/**
 * Add Rating
 */
export const addRating = <ThrowOnError extends boolean = false>(options: Options<AddRatingData, ThrowOnError>) => {
  return (options.client ?? _heyApiClient).post<AddRatingResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/ratings',
    ...options
  })
}

/**
 * List/Search Sites
 */
export const listSites = <ThrowOnError extends boolean = false>(options?: Options<ListSitesData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<ListSitesResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/sites',
    ...options
  })
}

/**
 * Show Site
 */
export const ff8A9Eed4050230F99E50E9Fd7830A00 = <ThrowOnError extends boolean = false>(
  options: Options<Ff8A9Eed4050230F99E50E9Fd7830A00Data, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    Ff8A9Eed4050230F99E50E9Fd7830A00Responses,
    Ff8A9Eed4050230F99E50E9Fd7830A00Errors,
    ThrowOnError
  >({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/sites/{identifier}',
    ...options
  })
}

/**
 * List/Search Tags
 */
export const listTags = <ThrowOnError extends boolean = false>(options?: Options<ListTagsData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<ListTagsResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/tags',
    ...options
  })
}

/**
 * Toggle a media item in the user's collection
 */
export const toggleCollection = <ThrowOnError extends boolean = false>(
  options: Options<ToggleCollectionData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<ToggleCollectionResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/user/collection',
    ...options
  })
}

/**
 * Your User
 */
export const me = <ThrowOnError extends boolean = false>(options?: Options<MeData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<MeResponses, unknown, ThrowOnError>({
    security: [
      {
        name: 'Authorization',
        type: 'apiKey'
      }
    ],
    url: '/auth/user',
    ...options
  })
}
